name: 3rd Part

on:
  issue_comment:
    types: [created]

jobs:
  process_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Process Comment
        id: process_comment
        run: |
          # Check if the event is a pull request comment
          if [ "${{ github.event.issue.pull_request }}" != "null" ]; then
            # This is a pull request comment
            echo "This is a pull request comment."

            # Extract the comment body and check for the specific comment text
            COMMENT_BODY=$(echo "${{ github.event.comment.body }}" | tr '[:upper:]' '[:lower:]')
            if [[ "$COMMENT_BODY" == "start test"* ]]; then
              echo "Test cases running"

              # Extract the pull request number from the comment
              PR_NUMBER=$(echo "${{ github.event.issue.url }}" | awk -F '/' '{print $NF}')

              # Fetch the pull request description
              PR_DESCRIPTION=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" | jq -r '.body')

              # Find the array in the pull request description using regex
              if [[ "$PR_DESCRIPTION" =~ \[(.*)\] ]]; then
                # Extract the array content and split it into individual elements
                IFS=',' read -ra ARRAY <<< "${BASH_REMATCH[1]}"
                
                # Loop through the elements and print them
                for element in "${ARRAY[@]}"; do
                  echo "$element"
                done
                
                # Count the number of elements in the array
                ARRAY_LENGTH=${#ARRAY[@]}
                echo "Number of elements in the array: $ARRAY_LENGTH"
                
                # Define an array of letters
                LETTERS=("a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z")

                # Loop through the array and assign letters 'a', 'b', 'c', 'd', etc.
                for ((i=0; i<ARRAY_LENGTH; i++)); do
                  if ((i < 26)); then
                    echo "Element ${ARRAY[i]} is assigned letter ${LETTERS[i]}"
                  else
                    echo "Element ${ARRAY[i]} is assigned letter ${LETTERS[(i%26)]}${LETTERS[(i/26)]}"
                  fi
                done

              else
                echo "Array not found in the pull request description."
              fi
            else
              echo "Not the specific comment. Skipping..."
            fi
          else 
            # This is not a pull request comment
            echo "Not a pull request comment. Skipping..."
          fi
