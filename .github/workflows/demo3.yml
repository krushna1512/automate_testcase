name: 4th Part

on:
  issue_comment:
    types: [created]

jobs:
  process_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Process Comment
        id: process_comment
        run: |
          # Check if the event is a pull request comment
          if [ "${{ github.event.issue.pull_request }}" != "null" ]; then
            # This is a pull request comment
            echo "This is a pull request comment."

            # Extract the comment body and check for the specific comment text
            COMMENT_BODY=$(echo "${{ github.event.comment.body }}" | tr '[:upper:]' '[:lower:]')
            if [[ "$COMMENT_BODY" == "start test"* ]]; then
              echo "Test cases running"

              # Extract the pull request number from the comment
              PR_NUMBER=$(echo "${{ github.event.issue.url }}" | awk -F '/' '{print $NF}')

              # Fetch the pull request description
              PR_DESCRIPTION=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" | jq -r '.body')

              # Find the array in the pull request description using regex
              if [[ "$PR_DESCRIPTION" =~ \[(.*)\] ]]; then
                # Extract the array content and split it into individual elements
                IFS=',' read -ra ARRAY <<< "${BASH_REMATCH[1]}"
                
                # Trigger the new workflow using workflow dispatch
                curl -X POST \
                  -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  -H "Accept: application/vnd.github.v3+json" \
                  https://api.github.com/repos/${{ github.repository }}/actions/workflows/PrintNumbersWorkflow/dispatches \
                  -d '{"ref": "main", "inputs": {"param1": "'"${ARRAY[0]}"'", "param2": "'"${ARRAY[1]}"'", "param3": "'"${ARRAY[2]}"'", "param4": "'"${ARRAY[3]}"'"}}'
                
              else
                echo "Array not found in the pull request description."
              fi
            else
              echo "Not the specific comment. Skipping..."
            fi
          else 
            # This is not a pull request comment
            echo "Not a pull request comment. Skipping..."
          fi
