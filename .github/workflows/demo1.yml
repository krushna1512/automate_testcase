name: PR Comment Trigger

on:
  issue_comment:
    types: [created]

jobs:
  process_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Process Comment
        id: process_comment
        run: |
          # Check if the event is a pull request comment
          if [ "${{ github.event.issue.pull_request }}" != "null" ]; then
            # This is a pull request comment
            echo "This is a pull request comment."

            # Extract the comment body and check for the specific comment text
            COMMENT_BODY=$(echo "${{ github.event.comment.body }}" | tr '[:upper:]' '[:lower:]')
            if [[ "$COMMENT_BODY" == "start test"* ]]; then
              echo "Test cases running"
              # Add your action logic here to run the test cases
              # For example, you can use a test runner like pytest, jest, etc.

              # Read the pull request description from the comment body
              PR_DESCRIPTION=$(echo "$COMMENT_BODY" | grep -oP "(?<=## Test Cases\n).*")

              # Replace "[ ]" with "[x]" to mark all checkpoints as completed
              UPDATED_PR_DESCRIPTION=$(echo "$PR_DESCRIPTION" | sed -E 's/- \[ \] ([^\n]+)/- [x] \1/g')

              # Generate the updated comment body with the modified description
              UPDATED_COMMENT_BODY=$(echo "${COMMENT_BODY/## Test Cases\n$PR_DESCRIPTION/## Test Cases\n$UPDATED_PR_DESCRIPTION}")

              # Update the pull request comment with the updated description
              echo "Updating the pull request comment with the updated description..."
              TOKEN="${{ secrets.TOKEN }}"
              curl -X PATCH -H "Authorization: token $TOKEN" -H "Content-Type: application/json" -d "{\"body\": \"$UPDATED_COMMENT_BODY\"}" "${{ github.event.comment.url }}"
            else
              echo "Not the specific comment. Skipping..."
            fi
          else 
            # This is not a pull request comment
            echo "Not a pull request comment. Skipping..."
          fi
